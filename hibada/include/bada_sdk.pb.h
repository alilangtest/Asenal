// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bada_sdk.proto

#ifndef PROTOBUF_bada_5fsdk_2eproto__INCLUDED
#define PROTOBUF_bada_5fsdk_2eproto__INCLUDED

#include <string>


#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bada_5fsdk_2eproto();
void protobuf_AssignDesc_bada_5fsdk_2eproto();
void protobuf_ShutdownFile_bada_5fsdk_2eproto();

class SdkInvalidOperation;
class SdkSet;
class SdkSetRet;
class SdkCas;
class SdkCasRet;
class SdkGet;
class SdkGetRet;
class SdkGetV;
class SdkGetVRet;
class SdkDelete;
class SdkDeleteRet;
class SdkPing;
class SdkPingRet;
class SdkGetIfAll;
class SdkGetIfAllRet;
class SdkMGet;
class SdkMGetRet;
class SdkMGetRet_KeyValue;

// ===================================================================

class SdkInvalidOperation : public ::google::protobuf::Message {
 public:
  SdkInvalidOperation();
  virtual ~SdkInvalidOperation();

  SdkInvalidOperation(const SdkInvalidOperation& from);

  inline SdkInvalidOperation& operator=(const SdkInvalidOperation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkInvalidOperation& default_instance();

  void Swap(SdkInvalidOperation* other);

  // implements Message ----------------------------------------------

  SdkInvalidOperation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkInvalidOperation& from);
  void MergeFrom(const SdkInvalidOperation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required int32 what = 2;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 2;
  inline ::google::protobuf::int32 what() const;
  inline void set_what(::google::protobuf::int32 value);

  // required bytes why = 3;
  inline bool has_why() const;
  inline void clear_why();
  static const int kWhyFieldNumber = 3;
  inline const ::std::string& why() const;
  inline void set_why(const ::std::string& value);
  inline void set_why(const char* value);
  inline void set_why(const void* value, size_t size);
  inline ::std::string* mutable_why();
  inline ::std::string* release_why();
  inline void set_allocated_why(::std::string* why);

  // @@protoc_insertion_point(class_scope:SdkInvalidOperation)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_what();
  inline void clear_has_what();
  inline void set_has_why();
  inline void clear_has_why();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;
  ::google::protobuf::int32 what_;
  ::std::string* why_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkInvalidOperation* default_instance_;
};
// -------------------------------------------------------------------

class SdkSet : public ::google::protobuf::Message {
 public:
  SdkSet();
  virtual ~SdkSet();

  SdkSet(const SdkSet& from);

  inline SdkSet& operator=(const SdkSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkSet& default_instance();

  void Swap(SdkSet* other);

  // implements Message ----------------------------------------------

  SdkSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkSet& from);
  void MergeFrom(const SdkSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required bytes value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:SdkSet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::std::string* key_;
  ::std::string* value_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkSet* default_instance_;
};
// -------------------------------------------------------------------

class SdkSetRet : public ::google::protobuf::Message {
 public:
  SdkSetRet();
  virtual ~SdkSetRet();

  SdkSetRet(const SdkSetRet& from);

  inline SdkSetRet& operator=(const SdkSetRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkSetRet& default_instance();

  void Swap(SdkSetRet* other);

  // implements Message ----------------------------------------------

  SdkSetRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkSetRet& from);
  void MergeFrom(const SdkSetRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bool status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:SdkSetRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkSetRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkCas : public ::google::protobuf::Message {
 public:
  SdkCas();
  virtual ~SdkCas();

  SdkCas(const SdkCas& from);

  inline SdkCas& operator=(const SdkCas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkCas& default_instance();

  void Swap(SdkCas* other);

  // implements Message ----------------------------------------------

  SdkCas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkCas& from);
  void MergeFrom(const SdkCas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required bytes value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // required int32 version = 5;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 5;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SdkCas)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::std::string* key_;
  ::google::protobuf::int32 opcode_;
  ::google::protobuf::int32 version_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkCas* default_instance_;
};
// -------------------------------------------------------------------

class SdkCasRet : public ::google::protobuf::Message {
 public:
  SdkCasRet();
  virtual ~SdkCasRet();

  SdkCasRet(const SdkCasRet& from);

  inline SdkCasRet& operator=(const SdkCasRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkCasRet& default_instance();

  void Swap(SdkCasRet* other);

  // implements Message ----------------------------------------------

  SdkCasRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkCasRet& from);
  void MergeFrom(const SdkCasRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bool status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:SdkCasRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkCasRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkGet : public ::google::protobuf::Message {
 public:
  SdkGet();
  virtual ~SdkGet();

  SdkGet(const SdkGet& from);

  inline SdkGet& operator=(const SdkGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGet& default_instance();

  void Swap(SdkGet* other);

  // implements Message ----------------------------------------------

  SdkGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGet& from);
  void MergeFrom(const SdkGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:SdkGet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::std::string* key_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGet* default_instance_;
};
// -------------------------------------------------------------------

class SdkGetRet : public ::google::protobuf::Message {
 public:
  SdkGetRet();
  virtual ~SdkGetRet();

  SdkGetRet(const SdkGetRet& from);

  inline SdkGetRet& operator=(const SdkGetRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGetRet& default_instance();

  void Swap(SdkGetRet* other);

  // implements Message ----------------------------------------------

  SdkGetRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGetRet& from);
  void MergeFrom(const SdkGetRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:SdkGetRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* value_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGetRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkGetV : public ::google::protobuf::Message {
 public:
  SdkGetV();
  virtual ~SdkGetV();

  SdkGetV(const SdkGetV& from);

  inline SdkGetV& operator=(const SdkGetV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGetV& default_instance();

  void Swap(SdkGetV* other);

  // implements Message ----------------------------------------------

  SdkGetV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGetV& from);
  void MergeFrom(const SdkGetV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:SdkGetV)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::std::string* key_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGetV* default_instance_;
};
// -------------------------------------------------------------------

class SdkGetVRet : public ::google::protobuf::Message {
 public:
  SdkGetVRet();
  virtual ~SdkGetVRet();

  SdkGetVRet(const SdkGetVRet& from);

  inline SdkGetVRet& operator=(const SdkGetVRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGetVRet& default_instance();

  void Swap(SdkGetVRet* other);

  // implements Message ----------------------------------------------

  SdkGetVRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGetVRet& from);
  void MergeFrom(const SdkGetVRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // required int32 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SdkGetVRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* value_;
  ::google::protobuf::int32 opcode_;
  ::google::protobuf::int32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGetVRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkDelete : public ::google::protobuf::Message {
 public:
  SdkDelete();
  virtual ~SdkDelete();

  SdkDelete(const SdkDelete& from);

  inline SdkDelete& operator=(const SdkDelete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkDelete& default_instance();

  void Swap(SdkDelete* other);

  // implements Message ----------------------------------------------

  SdkDelete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkDelete& from);
  void MergeFrom(const SdkDelete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:SdkDelete)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::std::string* key_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkDelete* default_instance_;
};
// -------------------------------------------------------------------

class SdkDeleteRet : public ::google::protobuf::Message {
 public:
  SdkDeleteRet();
  virtual ~SdkDeleteRet();

  SdkDeleteRet(const SdkDeleteRet& from);

  inline SdkDeleteRet& operator=(const SdkDeleteRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkDeleteRet& default_instance();

  void Swap(SdkDeleteRet* other);

  // implements Message ----------------------------------------------

  SdkDeleteRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkDeleteRet& from);
  void MergeFrom(const SdkDeleteRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bool status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:SdkDeleteRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkDeleteRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkPing : public ::google::protobuf::Message {
 public:
  SdkPing();
  virtual ~SdkPing();

  SdkPing(const SdkPing& from);

  inline SdkPing& operator=(const SdkPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkPing& default_instance();

  void Swap(SdkPing* other);

  // implements Message ----------------------------------------------

  SdkPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkPing& from);
  void MergeFrom(const SdkPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SdkPing)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkPing* default_instance_;
};
// -------------------------------------------------------------------

class SdkPingRet : public ::google::protobuf::Message {
 public:
  SdkPingRet();
  virtual ~SdkPingRet();

  SdkPingRet(const SdkPingRet& from);

  inline SdkPingRet& operator=(const SdkPingRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkPingRet& default_instance();

  void Swap(SdkPingRet* other);

  // implements Message ----------------------------------------------

  SdkPingRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkPingRet& from);
  void MergeFrom(const SdkPingRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bool status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:SdkPingRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opcode_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkPingRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkGetIfAll : public ::google::protobuf::Message {
 public:
  SdkGetIfAll();
  virtual ~SdkGetIfAll();

  SdkGetIfAll(const SdkGetIfAll& from);

  inline SdkGetIfAll& operator=(const SdkGetIfAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGetIfAll& default_instance();

  void Swap(SdkGetIfAll* other);

  // implements Message ----------------------------------------------

  SdkGetIfAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGetIfAll& from);
  void MergeFrom(const SdkGetIfAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // required bytes key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required bool Strict = 4;
  inline bool has_strict() const;
  inline void clear_strict();
  static const int kStrictFieldNumber = 4;
  inline bool strict() const;
  inline void set_strict(bool value);

  // @@protoc_insertion_point(class_scope:SdkGetIfAll)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_strict();
  inline void clear_has_strict();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::google::protobuf::int32 opcode_;
  bool strict_;
  ::std::string* key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGetIfAll* default_instance_;
};
// -------------------------------------------------------------------

class SdkGetIfAllRet : public ::google::protobuf::Message {
 public:
  SdkGetIfAllRet();
  virtual ~SdkGetIfAllRet();

  SdkGetIfAllRet(const SdkGetIfAllRet& from);

  inline SdkGetIfAllRet& operator=(const SdkGetIfAllRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkGetIfAllRet& default_instance();

  void Swap(SdkGetIfAllRet* other);

  // implements Message ----------------------------------------------

  SdkGetIfAllRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkGetIfAllRet& from);
  void MergeFrom(const SdkGetIfAllRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // required int32 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SdkGetIfAllRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* value_;
  ::google::protobuf::int32 opcode_;
  ::google::protobuf::int32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkGetIfAllRet* default_instance_;
};
// -------------------------------------------------------------------

class SdkMGet : public ::google::protobuf::Message {
 public:
  SdkMGet();
  virtual ~SdkMGet();

  SdkMGet(const SdkMGet& from);

  inline SdkMGet& operator=(const SdkMGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkMGet& default_instance();

  void Swap(SdkMGet* other);

  // implements Message ----------------------------------------------

  SdkMGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkMGet& from);
  void MergeFrom(const SdkMGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // required bytes table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const void* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // repeated bytes key = 3;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // @@protoc_insertion_point(class_scope:SdkMGet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_table();
  inline void clear_has_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkMGet* default_instance_;
};
// -------------------------------------------------------------------

class SdkMGetRet_KeyValue : public ::google::protobuf::Message {
 public:
  SdkMGetRet_KeyValue();
  virtual ~SdkMGetRet_KeyValue();

  SdkMGetRet_KeyValue(const SdkMGetRet_KeyValue& from);

  inline SdkMGetRet_KeyValue& operator=(const SdkMGetRet_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkMGetRet_KeyValue& default_instance();

  void Swap(SdkMGetRet_KeyValue* other);

  // implements Message ----------------------------------------------

  SdkMGetRet_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkMGetRet_KeyValue& from);
  void MergeFrom(const SdkMGetRet_KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SdkMGetRet.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* value_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkMGetRet_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class SdkMGetRet : public ::google::protobuf::Message {
 public:
  SdkMGetRet();
  virtual ~SdkMGetRet();

  SdkMGetRet(const SdkMGetRet& from);

  inline SdkMGetRet& operator=(const SdkMGetRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkMGetRet& default_instance();

  void Swap(SdkMGetRet* other);

  // implements Message ----------------------------------------------

  SdkMGetRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkMGetRet& from);
  void MergeFrom(const SdkMGetRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SdkMGetRet_KeyValue KeyValue;

  // accessors -------------------------------------------------------

  // required int32 opcode = 1;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  inline ::google::protobuf::int32 opcode() const;
  inline void set_opcode(::google::protobuf::int32 value);

  // repeated .SdkMGetRet.KeyValue rets = 2;
  inline int rets_size() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline const ::SdkMGetRet_KeyValue& rets(int index) const;
  inline ::SdkMGetRet_KeyValue* mutable_rets(int index);
  inline ::SdkMGetRet_KeyValue* add_rets();
  inline const ::google::protobuf::RepeatedPtrField< ::SdkMGetRet_KeyValue >&
      rets() const;
  inline ::google::protobuf::RepeatedPtrField< ::SdkMGetRet_KeyValue >*
      mutable_rets();

  // @@protoc_insertion_point(class_scope:SdkMGetRet)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SdkMGetRet_KeyValue > rets_;
  ::google::protobuf::int32 opcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_bada_5fsdk_2eproto();
  friend void protobuf_AssignDesc_bada_5fsdk_2eproto();
  friend void protobuf_ShutdownFile_bada_5fsdk_2eproto();

  void InitAsDefaultInstance();
  static SdkMGetRet* default_instance_;
};
// ===================================================================


// ===================================================================

// SdkInvalidOperation

// required int32 opcode = 1;
inline bool SdkInvalidOperation::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkInvalidOperation::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkInvalidOperation::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkInvalidOperation::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkInvalidOperation::opcode() const {
  return opcode_;
}
inline void SdkInvalidOperation::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required int32 what = 2;
inline bool SdkInvalidOperation::has_what() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkInvalidOperation::set_has_what() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkInvalidOperation::clear_has_what() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkInvalidOperation::clear_what() {
  what_ = 0;
  clear_has_what();
}
inline ::google::protobuf::int32 SdkInvalidOperation::what() const {
  return what_;
}
inline void SdkInvalidOperation::set_what(::google::protobuf::int32 value) {
  set_has_what();
  what_ = value;
}

// required bytes why = 3;
inline bool SdkInvalidOperation::has_why() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkInvalidOperation::set_has_why() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkInvalidOperation::clear_has_why() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkInvalidOperation::clear_why() {
  if (why_ != &::google::protobuf::internal::kEmptyString) {
    why_->clear();
  }
  clear_has_why();
}
inline const ::std::string& SdkInvalidOperation::why() const {
  return *why_;
}
inline void SdkInvalidOperation::set_why(const ::std::string& value) {
  set_has_why();
  if (why_ == &::google::protobuf::internal::kEmptyString) {
    why_ = new ::std::string;
  }
  why_->assign(value);
}
inline void SdkInvalidOperation::set_why(const char* value) {
  set_has_why();
  if (why_ == &::google::protobuf::internal::kEmptyString) {
    why_ = new ::std::string;
  }
  why_->assign(value);
}
inline void SdkInvalidOperation::set_why(const void* value, size_t size) {
  set_has_why();
  if (why_ == &::google::protobuf::internal::kEmptyString) {
    why_ = new ::std::string;
  }
  why_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkInvalidOperation::mutable_why() {
  set_has_why();
  if (why_ == &::google::protobuf::internal::kEmptyString) {
    why_ = new ::std::string;
  }
  return why_;
}
inline ::std::string* SdkInvalidOperation::release_why() {
  clear_has_why();
  if (why_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = why_;
    why_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkInvalidOperation::set_allocated_why(::std::string* why) {
  if (why_ != &::google::protobuf::internal::kEmptyString) {
    delete why_;
  }
  if (why) {
    set_has_why();
    why_ = why;
  } else {
    clear_has_why();
    why_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkSet

// required int32 opcode = 1;
inline bool SdkSet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkSet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkSet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkSet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkSet::opcode() const {
  return opcode_;
}
inline void SdkSet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkSet::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkSet::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkSet::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkSet::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkSet::table() const {
  return *table_;
}
inline void SdkSet::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkSet::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkSet::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkSet::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkSet::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkSet::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkSet::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkSet::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkSet::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkSet::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkSet::key() const {
  return *key_;
}
inline void SdkSet::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkSet::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkSet::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkSet::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkSet::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkSet::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes value = 4;
inline bool SdkSet::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SdkSet::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SdkSet::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SdkSet::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkSet::value() const {
  return *value_;
}
inline void SdkSet::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkSet::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkSet::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkSet::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkSet::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkSet::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkSetRet

// required int32 opcode = 1;
inline bool SdkSetRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkSetRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkSetRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkSetRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkSetRet::opcode() const {
  return opcode_;
}
inline void SdkSetRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bool status = 2;
inline bool SdkSetRet::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkSetRet::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkSetRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkSetRet::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool SdkSetRet::status() const {
  return status_;
}
inline void SdkSetRet::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SdkCas

// required int32 opcode = 1;
inline bool SdkCas::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkCas::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkCas::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkCas::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkCas::opcode() const {
  return opcode_;
}
inline void SdkCas::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkCas::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkCas::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkCas::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkCas::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkCas::table() const {
  return *table_;
}
inline void SdkCas::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkCas::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkCas::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkCas::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkCas::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkCas::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkCas::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkCas::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkCas::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkCas::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkCas::key() const {
  return *key_;
}
inline void SdkCas::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkCas::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkCas::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkCas::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkCas::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkCas::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes value = 4;
inline bool SdkCas::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SdkCas::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SdkCas::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SdkCas::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkCas::value() const {
  return *value_;
}
inline void SdkCas::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkCas::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkCas::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkCas::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkCas::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkCas::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 version = 5;
inline bool SdkCas::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SdkCas::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SdkCas::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SdkCas::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 SdkCas::version() const {
  return version_;
}
inline void SdkCas::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// SdkCasRet

// required int32 opcode = 1;
inline bool SdkCasRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkCasRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkCasRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkCasRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkCasRet::opcode() const {
  return opcode_;
}
inline void SdkCasRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bool status = 2;
inline bool SdkCasRet::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkCasRet::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkCasRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkCasRet::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool SdkCasRet::status() const {
  return status_;
}
inline void SdkCasRet::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SdkGet

// required int32 opcode = 1;
inline bool SdkGet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGet::opcode() const {
  return opcode_;
}
inline void SdkGet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkGet::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGet::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGet::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGet::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkGet::table() const {
  return *table_;
}
inline void SdkGet::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGet::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGet::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGet::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkGet::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGet::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkGet::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkGet::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkGet::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkGet::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkGet::key() const {
  return *key_;
}
inline void SdkGet::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGet::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGet::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGet::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkGet::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGet::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkGetRet

// required int32 opcode = 1;
inline bool SdkGetRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGetRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGetRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGetRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGetRet::opcode() const {
  return opcode_;
}
inline void SdkGetRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes value = 2;
inline bool SdkGetRet::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGetRet::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGetRet::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGetRet::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkGetRet::value() const {
  return *value_;
}
inline void SdkGetRet::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetRet::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetRet::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetRet::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkGetRet::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetRet::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkGetV

// required int32 opcode = 1;
inline bool SdkGetV::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGetV::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGetV::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGetV::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGetV::opcode() const {
  return opcode_;
}
inline void SdkGetV::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkGetV::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGetV::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGetV::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGetV::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkGetV::table() const {
  return *table_;
}
inline void SdkGetV::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGetV::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGetV::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetV::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkGetV::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetV::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkGetV::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkGetV::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkGetV::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkGetV::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkGetV::key() const {
  return *key_;
}
inline void SdkGetV::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGetV::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGetV::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetV::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkGetV::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetV::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkGetVRet

// required int32 opcode = 1;
inline bool SdkGetVRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGetVRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGetVRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGetVRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGetVRet::opcode() const {
  return opcode_;
}
inline void SdkGetVRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes value = 2;
inline bool SdkGetVRet::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGetVRet::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGetVRet::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGetVRet::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkGetVRet::value() const {
  return *value_;
}
inline void SdkGetVRet::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetVRet::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetVRet::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetVRet::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkGetVRet::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetVRet::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 version = 3;
inline bool SdkGetVRet::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkGetVRet::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkGetVRet::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkGetVRet::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 SdkGetVRet::version() const {
  return version_;
}
inline void SdkGetVRet::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// SdkDelete

// required int32 opcode = 1;
inline bool SdkDelete::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkDelete::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkDelete::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkDelete::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkDelete::opcode() const {
  return opcode_;
}
inline void SdkDelete::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkDelete::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkDelete::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkDelete::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkDelete::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkDelete::table() const {
  return *table_;
}
inline void SdkDelete::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkDelete::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkDelete::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkDelete::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkDelete::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkDelete::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkDelete::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkDelete::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkDelete::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkDelete::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkDelete::key() const {
  return *key_;
}
inline void SdkDelete::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkDelete::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkDelete::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkDelete::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkDelete::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkDelete::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SdkDeleteRet

// required int32 opcode = 1;
inline bool SdkDeleteRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkDeleteRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkDeleteRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkDeleteRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkDeleteRet::opcode() const {
  return opcode_;
}
inline void SdkDeleteRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bool status = 2;
inline bool SdkDeleteRet::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkDeleteRet::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkDeleteRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkDeleteRet::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool SdkDeleteRet::status() const {
  return status_;
}
inline void SdkDeleteRet::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SdkPing

// required int32 opcode = 1;
inline bool SdkPing::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkPing::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkPing::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkPing::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkPing::opcode() const {
  return opcode_;
}
inline void SdkPing::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// -------------------------------------------------------------------

// SdkPingRet

// required int32 opcode = 1;
inline bool SdkPingRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkPingRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkPingRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkPingRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkPingRet::opcode() const {
  return opcode_;
}
inline void SdkPingRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bool status = 2;
inline bool SdkPingRet::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkPingRet::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkPingRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkPingRet::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool SdkPingRet::status() const {
  return status_;
}
inline void SdkPingRet::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SdkGetIfAll

// required int32 opcode = 1;
inline bool SdkGetIfAll::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGetIfAll::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGetIfAll::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGetIfAll::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGetIfAll::opcode() const {
  return opcode_;
}
inline void SdkGetIfAll::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkGetIfAll::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGetIfAll::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGetIfAll::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGetIfAll::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkGetIfAll::table() const {
  return *table_;
}
inline void SdkGetIfAll::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGetIfAll::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkGetIfAll::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetIfAll::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkGetIfAll::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetIfAll::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes key = 3;
inline bool SdkGetIfAll::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkGetIfAll::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkGetIfAll::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkGetIfAll::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkGetIfAll::key() const {
  return *key_;
}
inline void SdkGetIfAll::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGetIfAll::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkGetIfAll::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetIfAll::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkGetIfAll::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetIfAll::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool Strict = 4;
inline bool SdkGetIfAll::has_strict() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SdkGetIfAll::set_has_strict() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SdkGetIfAll::clear_has_strict() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SdkGetIfAll::clear_strict() {
  strict_ = false;
  clear_has_strict();
}
inline bool SdkGetIfAll::strict() const {
  return strict_;
}
inline void SdkGetIfAll::set_strict(bool value) {
  set_has_strict();
  strict_ = value;
}

// -------------------------------------------------------------------

// SdkGetIfAllRet

// required int32 opcode = 1;
inline bool SdkGetIfAllRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkGetIfAllRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkGetIfAllRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkGetIfAllRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkGetIfAllRet::opcode() const {
  return opcode_;
}
inline void SdkGetIfAllRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes value = 2;
inline bool SdkGetIfAllRet::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkGetIfAllRet::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkGetIfAllRet::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkGetIfAllRet::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkGetIfAllRet::value() const {
  return *value_;
}
inline void SdkGetIfAllRet::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetIfAllRet::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkGetIfAllRet::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkGetIfAllRet::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkGetIfAllRet::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkGetIfAllRet::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 version = 3;
inline bool SdkGetIfAllRet::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkGetIfAllRet::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkGetIfAllRet::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkGetIfAllRet::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 SdkGetIfAllRet::version() const {
  return version_;
}
inline void SdkGetIfAllRet::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// SdkMGet

// required int32 opcode = 1;
inline bool SdkMGet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkMGet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkMGet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkMGet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkMGet::opcode() const {
  return opcode_;
}
inline void SdkMGet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// required bytes table = 2;
inline bool SdkMGet::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkMGet::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkMGet::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkMGet::clear_table() {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& SdkMGet::table() const {
  return *table_;
}
inline void SdkMGet::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkMGet::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(value);
}
inline void SdkMGet::set_table(const void* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkMGet::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    table_ = new ::std::string;
  }
  return table_;
}
inline ::std::string* SdkMGet::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkMGet::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::kEmptyString) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated bytes key = 3;
inline int SdkMGet::key_size() const {
  return key_.size();
}
inline void SdkMGet::clear_key() {
  key_.Clear();
}
inline const ::std::string& SdkMGet::key(int index) const {
  return key_.Get(index);
}
inline ::std::string* SdkMGet::mutable_key(int index) {
  return key_.Mutable(index);
}
inline void SdkMGet::set_key(int index, const ::std::string& value) {
  key_.Mutable(index)->assign(value);
}
inline void SdkMGet::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
}
inline void SdkMGet::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkMGet::add_key() {
  return key_.Add();
}
inline void SdkMGet::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
}
inline void SdkMGet::add_key(const char* value) {
  key_.Add()->assign(value);
}
inline void SdkMGet::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SdkMGet::key() const {
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SdkMGet::mutable_key() {
  return &key_;
}

// -------------------------------------------------------------------

// SdkMGetRet_KeyValue

// required bytes key = 1;
inline bool SdkMGetRet_KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkMGetRet_KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkMGetRet_KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkMGetRet_KeyValue::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SdkMGetRet_KeyValue::key() const {
  return *key_;
}
inline void SdkMGetRet_KeyValue::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkMGetRet_KeyValue::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SdkMGetRet_KeyValue::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkMGetRet_KeyValue::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SdkMGetRet_KeyValue::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkMGetRet_KeyValue::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes value = 2;
inline bool SdkMGetRet_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkMGetRet_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkMGetRet_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkMGetRet_KeyValue::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SdkMGetRet_KeyValue::value() const {
  return *value_;
}
inline void SdkMGetRet_KeyValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkMGetRet_KeyValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SdkMGetRet_KeyValue::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SdkMGetRet_KeyValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SdkMGetRet_KeyValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SdkMGetRet_KeyValue::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 status = 3;
inline bool SdkMGetRet_KeyValue::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SdkMGetRet_KeyValue::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SdkMGetRet_KeyValue::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SdkMGetRet_KeyValue::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SdkMGetRet_KeyValue::status() const {
  return status_;
}
inline void SdkMGetRet_KeyValue::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SdkMGetRet

// required int32 opcode = 1;
inline bool SdkMGetRet::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkMGetRet::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkMGetRet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkMGetRet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 SdkMGetRet::opcode() const {
  return opcode_;
}
inline void SdkMGetRet::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
}

// repeated .SdkMGetRet.KeyValue rets = 2;
inline int SdkMGetRet::rets_size() const {
  return rets_.size();
}
inline void SdkMGetRet::clear_rets() {
  rets_.Clear();
}
inline const ::SdkMGetRet_KeyValue& SdkMGetRet::rets(int index) const {
  return rets_.Get(index);
}
inline ::SdkMGetRet_KeyValue* SdkMGetRet::mutable_rets(int index) {
  return rets_.Mutable(index);
}
inline ::SdkMGetRet_KeyValue* SdkMGetRet::add_rets() {
  return rets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SdkMGetRet_KeyValue >&
SdkMGetRet::rets() const {
  return rets_;
}
inline ::google::protobuf::RepeatedPtrField< ::SdkMGetRet_KeyValue >*
SdkMGetRet::mutable_rets() {
  return &rets_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bada_5fsdk_2eproto__INCLUDED
