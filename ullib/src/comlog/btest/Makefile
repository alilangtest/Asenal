###########################################################################
# Automatically generated by comake (1.0.1)  							  #
###########################################################################

#################设计系统参数#######################################
WORKROOT	?=	../../../../../
IDLCC	:=	$(WORKROOT)/public/idlcompiler/output/bin/mcy
RPCCC :=  $(WORKROOT)/public/ubrpc/output/bin/ubrpcgen
CC	:=	gcc
CXX	:=	g++
LEX	:=	flex
YACC	:= yacc
CFLAGS	:=	-pipe -fsigned-char -Wall -W -g -fPIC
CXXFLAGS	:=	-pipe -fsigned-char -Wall -W -g -fPIC -D_XOPEN_SOURE=500 -D_GNU_SOURCE -ftemplate-depth-128
LEXFLAGS	:=	
YACCFLAGS	:=	
IDLFLAGS	:=  
LINKFLAGS	:=  -rdynamic
LINK	:=	g++
AR	:=	ar cqs
RANLIB	:=	
COMAKE	:=	comake

###############baidu lib 的32位 64位支持#################
HARDWARE_PLATFORM := $(shell uname -m)
ifeq ($(HARDWARE_PLATFORM),x86_64)
	lib2=lib2-64
	third=third-64
else
	lib2=lib2
	third=third
endif
##########################################

# 编译参数
DEP_INCPATH =  -I$(WORKROOT)/$(third)/gtest//include/
DEP_LDFLAGS =  -L$(WORKROOT)/$(third)/gtest//lib/
DEP_LDLIBS = -lgtest_main -lgtest
INCPATH =  -I. -I. -I../../../output//include/ -I../../../output//include/comlog
MAKDEP = Makefile.dep


#start target
first : all

############# 默认推到公式
.SUFFIXES: .c .cpp .cc .cxx .C .idl .des
.PRECIOUS: %.cpp

.cpp.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cc.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cxx.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.C.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.c.o:
	$(CC) -c -o $@ $<  $(CFLAGS) $(CPPFLAGS) $(INCPATH)

.idl.cpp:
	$(IDLCC) --ns=$(*F) -o $* $< $(CPPFLAGS) $(INCPATH) $(IDLFLAGS)

#############
###cpp 支持
%info : %
	ccp $<
#############


#__$MAKEFILE_RULES$__



###############编译目标
all :  target output 
.PHONY : all clean test output comake src conf 

target : test_comlog 
#target : rpcidl test_comlog 
#target : 
#__$target_CMDLINE$__

rpcidl : 

clean_rpcidl : 


test : 


comake :
	-make clean
	-comake 

#-include $(MAKDEP)
-include $(MAKDEP)

#----------------build target : test_comlog--------------------

test_comlog : CC := gcc
test_comlog : CXX := g++
test_comlog : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -D_XOPEN_SOURE=500 -D_GNU_SOURCE -ftemplate-depth-128
test_comlog : CPPFLAGS := 
test_comlog : IDLFLAGS := 
test_comlog : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test_comlog : INCPATH :=  -I. -I. -I../../../output//include/ -I../../../output//include/comlog $(DEP_INCPATH)
test_comlog : LDLIBS := -lcrypto -lm -lpthread -L../../../output//lib -lullib $(DEP_LDLIBS)
test_comlog : LDFLAGS :=  $(DEP_LDFLAGS)
test_comlog : LINKFLAGS := -rdynamic

test_comlog_SOURCES := $(wildcard comake_autogen.cpp test_comlog.cpp)
#test_comlog_HEADERS := $(wildcard *.h)
test_comlog_HEADERS := *.h
test_comlog_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test_comlog_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test_comlog_IDLSRC))
test_comlog_IDLSRCH := $(patsubst %.idl,%.h, $(test_comlog_IDLSRC))
test_comlog_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test_comlog.des)
test_comlog_CONFRANGE := $(patsubst %.des,%.range, $(test_comlog_CONFDES))
test_comlog_OBJS := $(test_comlog_IDLSRC:.idl=.o)
test_comlog_OBJS += $(test_comlog_SOURCES:.c=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.cc=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.cpp=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.cxx=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.C=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.idl=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.yacc=.o)
test_comlog_OBJS := $(test_comlog_OBJS:.lex=.o)
test_comlog : $(test_comlog_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test_comlog_CONFDES);do cpp -C -o test_comlog.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test_comlog.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test_comlog_output
	mkdir -p output
	mkdir -p output/bin
	cp -rf test_comlog output/bin
	`if [ -e "conf" ];then cp -rf conf output/ ;fi`

endef
	

define test_comlog_clean
	-rm -rf $(test_comlog_OBJS) $(test_comlog_IDLSRCCPP) $(test_comlog_IDLSRCH) test_comlog.range conf/test_comlog.range
	-rm -rf test_comlog
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test_comlog_ccpc
	ccp $(test_comlog_SOURCES) --formatter vim
endef
	

define test_comlog_cov
	
endef
	



#---------------------end build target : test_comlog------------------

define _output
	$(test_comlog_output)
endef
	

define _clean
	$(test_comlog_clean)
endef
	

ccpc : 
	$(test_comlog_ccpc)

cov : 
	cov01 -1
	make clean
	make 
	cov01 -0



output : test_comlog 
	$(_output)
	rm -rf $(MAKDEP)

$(MAKDEP) : $(wildcard comake_autogen.cpp test_comlog.cpp)
	-$(CC) -MG -MM $(CPPFLAGS) $(INCPATH) $(DEP_INCPATH) $^ > $@

clean:
	$(_clean)
	rm -rf $(MAKDEP)


